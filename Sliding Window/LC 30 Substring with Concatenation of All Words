Link to Q:https://leetcode.com/problems/substring-with-concatenation-of-all-words/description/?envType=problem-list-v2&envId=sliding-window

Code:
class Solution(object):
    def findSubstring(self, s, words):
        """
        :type s: str
        :type words: List[str]
        :rtype: List[int]
        """
        if not s or not words:
            return []

        word_len = len(words[0])
        num_words = len(words)
        total_len = word_len * num_words
        result = []

        # Step 1: Manually build the word count dictionary
        word_count = {}
        for word in words:
            if word in word_count:
                word_count[word] += 1
            else:
                word_count[word] = 1

        # Step 2: Check every possible window
        for i in range(len(s) - total_len + 1):
            seen = {}
            j = 0
            while j < num_words:
                word = s[i + j * word_len:i + (j + 1) * word_len]
                if word in word_count:
                    if word in seen:
                        seen[word] += 1
                    else:
                        seen[word] = 1

                    if seen[word] > word_count[word]:
                        break
                else:
                    break
                j += 1

            if j == num_words:
                result.append(i)

        return result
